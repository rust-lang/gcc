From 9414c11a74273df23fa30ab2e71fca86dfa2e039 Mon Sep 17 00:00:00 2001
From: winstonallo <arthur@biedcharreton.com>
Date: Mon, 13 Oct 2025 16:17:36 +0200
Subject: [PATCH] Disable 128-bit integers for testing purposes

---
 gcc/jit/dummy-frontend.cc | 3 ++-
 gcc/jit/jit-playback.cc   | 8 ++++----
 gcc/jit/jit-target.cc     | 4 ++--
 3 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/gcc/jit/dummy-frontend.cc b/gcc/jit/dummy-frontend.cc
index 773e35acfd1..919393d6bc8 100644
--- a/gcc/jit/dummy-frontend.cc
+++ b/gcc/jit/dummy-frontend.cc
@@ -1333,7 +1333,8 @@ recording::type* tree_type_to_jit_type (tree type)
   else if (type == unsigned_intTI_type_node)
   {
     // TODO: check if this is the correct type.
-    return new recording::memento_of_get_type (&target_builtins_ctxt, GCC_JIT_TYPE_UINT128_T);
+    return new recording::memento_of_get_type (&target_builtins_ctxt,
+					       GCC_JIT_TYPE_VOID);
   }
   else if (INTEGRAL_TYPE_P (type))
   {
diff --git a/gcc/jit/jit-playback.cc b/gcc/jit/jit-playback.cc
index e41408b635c..093728b6ff6 100644
--- a/gcc/jit/jit-playback.cc
+++ b/gcc/jit/jit-playback.cc
@@ -250,8 +250,8 @@ get_tree_node_for_type (enum gcc_jit_types type_)
     case GCC_JIT_TYPE_UINT64_T:
       return uint64_type_node;
     case GCC_JIT_TYPE_UINT128_T:
-      if (targetm.scalar_mode_supported_p (TImode))
-	return uint128_type_node;
+      /*if (targetm.scalar_mode_supported_p (TImode))
+      return uint128_type_node;*/
 
       add_error (NULL, "gcc_jit_types value unsupported on this target: %i",
 		 type_);
@@ -266,8 +266,8 @@ get_tree_node_for_type (enum gcc_jit_types type_)
     case GCC_JIT_TYPE_INT64_T:
       return intDI_type_node;
     case GCC_JIT_TYPE_INT128_T:
-      if (targetm.scalar_mode_supported_p (TImode))
-	return intTI_type_node;
+      /*if (targetm.scalar_mode_supported_p (TImode))
+      return intTI_type_node;*/
 
       add_error (NULL, "gcc_jit_types value unsupported on this target: %i",
 		 type_);
diff --git a/gcc/jit/jit-target.cc b/gcc/jit/jit-target.cc
index 031b7e79591..16983301ce9 100644
--- a/gcc/jit/jit-target.cc
+++ b/gcc/jit/jit-target.cc
@@ -39,11 +39,11 @@ along with GCC; see the file COPYING3.  If not see
 void
 jit_target_dependent_types_init()
 {
-	if (targetm.scalar_mode_supported_p (TImode))
+	/*if (targetm.scalar_mode_supported_p (TImode))
   {
     jit_target_add_supported_target_dependent_type(GCC_JIT_TYPE_UINT128_T);
     jit_target_add_supported_target_dependent_type(GCC_JIT_TYPE_INT128_T);
-  }
+  }*/
 
   if (float16_type_node != NULL && TYPE_PRECISION(float16_type_node) == 16)
     jit_target_add_supported_target_dependent_type(GCC_JIT_TYPE_FLOAT16);
-- 
2.51.1

